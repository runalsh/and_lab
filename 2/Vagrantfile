# -*- mode: ruby -*-
# vi: set ft=ruby :


Vagrant.configure("2") do |config|
  config.vm.box = "debian/bullseye64"
  config.vm.box_check_update = false
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true

  config.vm.provision "shell", inline: <<-SHELL
	timedatectl set-timezone Europe/Moscow
	apt-get update
	apt install iproute2 traceroute net-tools nmon gnupg2 wget curl conntrack -y
	sudo mkdir /root/.ssh/
	echo "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAr53uTiK0O/sbacgMcsHGp2mL0XvjpxI9O6n2KOPduFbmwKF/ZxLZm6nR1K6Dkj5aeg+BEFft1lrkh08ubJCYkF7/5vXy5dlzlLokCwc3aEOIIxD2WsOaFizmiy/b3KE16bvpkM7WzydlW6LyTaF3BoAikiw5D5IibroSij2mFWGVieXxXJSyryu+xmsNqGywuKc+4DjoaqEJJooBU53OdTkg8RGeN4dCrEWbJIc7agl5MDaBpL8aO6vH4OuGM7u3UFCTgDe6KRlK+bgYs4QEqb55RiNIp0vAOET4jH2QBhP489+5R1V6B/ozx2n0rDo3F3Hrha2Cp835KGoJVl2Gmw== rsa-key-20211028"  > /home/vagrant/.ssh/authorized_keys2
	sudo cp /home/vagrant/.ssh/authorized_keys2 /root/.ssh/
	chmod 600 /home/vagrant/.ssh/authorized_keys2
	chown vagrant /home/vagrant/.ssh/authorized_keys2
	chmod 600 /root/.ssh/authorized_keys2
	SHELL

  
# db
  config.vm.define "db" do |db|
    db.vm.hostname = "db.local"
	db.vm.network :forwarded_port, guest: 22, host: 2200
	db.vm.network :forwarded_port, guest: 22, host: 22000
	
	db.vm.disk :disk, name: "lvm_f1", size: "100MB"
    db.vm.disk :disk, name: "lvm_f2", size: "100MB"
    db.vm.disk :disk, name: "mdraid_b1", size: "110MB"
    db.vm.disk :disk, name: "mdraid_b2", size: "110MB"	
	
    db.vm.network "private_network", virtualbox__intnet: "intra2", ip: "192.168.20.2"
	db.vm.network "private_network", virtualbox__intnet: "manage", ip: "192.168.30.2"
	
	db.vm.provision "lvm_raid", type: "shell", inline: <<-SHELL
		apt install mdadm lvm2 -y
		mkdir -p /local/files
		pvcreate /dev/sdb /dev/sdc /dev/sdd /dev/sde
		vgcreate lvm /dev/sdb /dev/sdc
		lvcreate -l 100%FREE -n lv1 lvm
		mkfs.ext4 /dev/lvm/lv1
		mount -t ext4 /dev/lvm/lv1 /local/files
		
		mkdir -p /local/backups
		mdadm --create --verbose /dev/md0 --level 0 --raid-devices=2 /dev/sdd /dev/sde
		mkfs.ext4 -m 0 /dev/md0
		mount -t ext4 /dev/md0 /local/backups
	SHELL
	
	db.vm.provision "postgre_pgadmin", type: "shell", privileged: false, inline: <<-SHELL
		sudo apt install postgresql python3 python3-pip python-dev libpcre3 libpcre3-dev python3-venv virtualenv libpq-dev python-dev --no-install-recommends --no-install-suggests -y
		sudo mkdir /var/lib/pgadmin
		sudo mkdir /var/log/pgadmin
		sudo chown $USER /var/lib/pgadmin
		sudo chown $USER /var/log/pgadmin
		python3 -m venv pgadmin4
		cp /vagrant/Desktop/pgadmin4.db /home/vagrant/ & cp /home/vagrant/pgadmin4.db /var/lib/pgadmin/
		cd /home/vagrant/
		source pgadmin4/bin/activate
		pip install pgadmin4
		nohup python /home/vagrant/pgadmin4/lib/python3.9/site-packages/pgadmin4/pgAdmin4.py&
	SHELL
	
	db.vm.provision "db_init", type: "shell", privileged: false, inline: <<-SHELL
		cp /vagrant/Desktop/postgremagazines.csv /home/vagrant/ & cp /vagrant/Desktop/postgreinit.sql /home/vagrant/ & cp /vagrant/Desktop/postgremydb.sql /home/vagrant/
		sudo -u postgres psql -f /home/vagrant/postgreinit.sql
		sudo -u vagrant psql mydb -f /home/vagrant/postgremydb.sql
	SHELL
	
	db.vm.provision "nginx_local", type: "shell", privileged: false, inline: "sudo apt install nginx php-fpm php-pgsql -y & cp  /vagrant/Desktop/nginxdb_default /home/vagrant/ & sudo cp /home/vagrant/nginxdb_default /etc/nginx/sites-available/default & cp /vagrant/Desktop/1.php /home/vagrant/ & cp /home/vagrant/1.php /local/files & sudo echo extension=pdo_pgsql >> /etc/php/7.4/fpm/php.ini & sudo echo extension=pgsql >> /etc/php/7.4/fpm/php.ini & sudo service php7.4-fpm restart & sudo service nginx restart"
	
	
	#db.vm.provision "route", type: "shell", inline: "sudo route del default && sudo ip route add default via 192.168.20.3"
	db.vm.network "forwarded_port", guest: 5050, host: 5050
	db.vm.network "forwarded_port", guest: 5432, host: 5432
	
  end

  
 # router
  config.vm.define "router" do |router|
	router.vm.network :forwarded_port, guest: 22, host: 2244
  	router.vm.provider "virtualbox" do |ram|
		ram.memory = 2000
		end
    router.vm.hostname = "router.local"
    router.vm.network "private_network", virtualbox__intnet: "intra2", ip: "192.168.20.3"
	router.vm.network "private_network", virtualbox__intnet: "intra1", ip: "192.168.10.3"
	router.vm.network "private_network", virtualbox__intnet: "log", ip: "192.168.40.1"
	router.vm.network "private_network", virtualbox__intnet: "manage", ip: "192.168.30.1"
	
	
	router.vm.provision "ipforw_routing", type: "shell", inline: "sudo sysctl -w net.ipv4.ip_forward=1 && sysctl -p & sudo iptables -A FORWARD -i eth2 -o eth3 -j ACCEPT & sudo iptables -A FORWARD -i eth3 -o eth2 -j ACCEPT & sudo iptables -A FORWARD -i eth3 -o eth4 -j ACCEPT & sudo iptables -A FORWARD -i eth4 -o eth3 -j ACCEPT "
	router.vm.provision :docker
	router.vm.provision :docker_compose
	router.vm.provision "prom_graf", type: "shell", inline: "cp -r /vagrant/desktop/prom_graf /home/vagrant/ & docker-compose -f /home/vagrant/prom_graf/docker-compose.yml up -d"
	router.vm.provision "nodeexp_local", type: "shell", inline: "wget  https://github.com/prometheus/node_exporter/releases/download/v1.2.2/node_exporter-1.2.2.linux-amd64.tar.gz &  tar xvfz node_exporter-1.2.2.linux-amd64.tar.gz & cd node_exporter-1.2.2.linux-amd64 & nohup ./node_exporter &"
  end   
 

# elk
  config.vm.define "elk" do |elk|
	elk.vm.hostname = "elk.local"
	elk.vm.network :forwarded_port, guest: 22, host: 2233
	elk.vm.network "private_network", virtualbox__intnet: "log", ip: "192.168.40.2"
	elk.vm.network :forwarded_port, guest: 5601, host: 5601
	elk.vm.network :forwarded_port, guest: 9200, host: 9200
	elk.vm.network :forwarded_port, guest: 5044, host: 5044
	elk.vm.provision "vmem", type: "shell", inline: "sudo sysctl vm.max_map_count=262144"
	#elk.vm.provision "route", type: "shell", inline: "sudo route del default && sudo ip route add default via 192.168.40.3"
	elk.vm.provider "virtualbox" do |v|
		v.memory = 4000
		end
	elk.vm.provision "docker" do |d|
		d.run "sebp/elk:671", args: "-p 5601:5601 -p 9200:9200 -p 5044:5044 -it -e ELASTIC_PASSWORD=runalsh"
		end
	elk.vm.provision "log_off_ssl", type: "shell", inline: "cp /vagrant/Desktop/02-beats-input.conf /home/vagrant/ & docker cp /home/vagrant/02-beats-input.conf elk:/etc/logstash/conf.d/02-beats-input.conf & docker cp sebp-elk:/etc/pki/tls/certs/logstash-beats.crt /home/vagrant/ & docker cp sebp-elk:/etc/pki/tls/private/logstash-beats.key /home/vagrant/ & docker restart elk"
	
  end   
  
# web
  config.vm.define "web" do |web|
    web.vm.hostname = "web.local"
	web.vm.network :forwarded_port, guest: 22, host: 2211
	web.vm.network "private_network", virtualbox__intnet: "intra1", ip: "192.168.10.2"
	web.vm.network "private_network", virtualbox__intnet: "manage", ip: "192.168.30.3"
	web.vm.network "public_network"
	web.vm.network "forwarded_port", guest: 80, host: 801
	web.vm.network "forwarded_port", guest: 443, host: 4431
	#web.vm.provision "route", type: "shell", inline: "sudo route del default && sudo ip route add default via 192.168.10.3"
	web.vm.provision "filebeat", type: "shell", privileged: false, inline: "cp /vagrant/desktop/filebeat.yml /home/vagrant/ &  wget https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-7.15.1-amd64.deb & sudo dpkg -i filebeat-7.15.1-amd64.deb & sudo filebeat modules enable system nginx & sudo mkdir /etc/filebeat/ & sudo cp /home/vagrant/filebeat.yml /etc/filebeat/filebeat.yml & sudo filebeat setup & sudo service filebeat restart"
	web.vm.provision "nginx_local", type: "shell", privileged: false, inline: "sudo apt install nginx -y & pip3 install psycopg & mkdir /local/scripts & cp  /vagrant/Desktop/nginxweb_default /home/vagrant/ & sudo cp /home/vagrant/nginxweb_default /etc/nginx/sites-available/default & sudo service nginx restart"

  end    
  
  
end 

  
